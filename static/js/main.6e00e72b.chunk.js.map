{"version":3,"sources":["BurgerMenu/BurgerMenu.module.css","BurgerMenu/hooks.js","BurgerMenu/helpers.js","BurgerMenu/BurgerMenu.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","typeofFunc","func","MENU_ANIMATIONS_TYPES","slideLeft","value","className","fallDown","cn","args","arguments","reduce","acc","BurgerMenu","animationType","children","width","height","isOpen","transitionDuration","onEnter","onEntering","onEntered","onExit","onExiting","onExited","onMenuItemClick","menuAnimation","menuBarTop","buttonBorder","classes","useState","isOpened","setIsOpened","containerHeight","setHeightBurgerContainer","containerWidth","setWidthBurgerContainer","burgerLineRef","useRef","menuContainerRef","containerRef","useCallback","node","getBoundingClientRect","useEffect","burgerLine","current","addEventListener","removeEventListener","toggle","preState","onMenuItemClickIn","e","useBurgerButton","parantWidth","parantHeight","calculateButtonDimensions","num","modifier","buttonFinalWidth","buttonFinalHeight","undefined","Number","isInteger","buttonWidth","buttonHeight","transitionTime","padding","newWidth","newHeight","border","menuContainerTop","midLineHeight","Math","sqrt","buttonStyle","topBottLinesStyle","transition","middleLineStyle","margin","topLineOpenedStyle","transform","bottomLineOpenedStyle","menuContainerStyle","top","applyButtonElementsStyles","menuAnimationCss","styles","buttonClassName","opened","topLineStyle","bottomLineStyle","finalizeLineSyles","bm_main_container","mainContainer","ref","bm_icon_container","buttonContainer","onClick","style","bar1","line","bar2","bar3","bm_links_container","menuContainer","menuUl","map","child","index","menuLi","key","App","message","setMessage","console","log","target","dtat-href","data-href","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.6e00e72b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"bm_main_container\":\"BurgerMenu_bm_main_container__1TpsG\",\"bm_icon_container\":\"BurgerMenu_bm_icon_container__3dzUZ\",\"bar1\":\"BurgerMenu_bar1__3KXjN\",\"bar2\":\"BurgerMenu_bar2__2Cb8e\",\"bar3\":\"BurgerMenu_bar3__1zFF1\",\"opened\":\"BurgerMenu_opened__27XAO\",\"bm_links_container\":\"BurgerMenu_bm_links_container__2PV-f\",\"slideLeft\":\"BurgerMenu_slideLeft__2F6sD\",\"fallDown\":\"BurgerMenu_fallDown__17KdY\"};","import  {useState, useCallback, useRef, useEffect }from \"react\";\r\n\r\nfunction typeofFunc(func){\r\n    if (typeof func == 'function') { \r\n        return func(); \r\n    }\r\n}\r\n\r\n\r\nexport const useBurgerButton = (onEntering, onEntered, onEnter, onExit, onExiting, onExited, isOpen,onMenuItemClick) => {\r\n    const [isOpened, setIsOpened] = useState(isOpen)\r\n    const [containerHeight, setHeightBurgerContainer] = useState(null);\r\n    const [containerWidth, setWidthBurgerContainer] = useState(null);\r\n    const burgerLineRef = useRef()\r\n    const menuContainerRef = useRef();\r\n    // TODO: think if there is resize of container - button should resize too -> not for now\r\n    const containerRef = useCallback(node => {\r\n        if (node !== null) {\r\n            setHeightBurgerContainer(node.getBoundingClientRect().height);\r\n            setWidthBurgerContainer(node.getBoundingClientRect().width);\r\n        }\r\n    }, []);\r\n\r\n    useEffect(()=>   { \r\n        const burgerLine = burgerLineRef.current\r\n        burgerLine.addEventListener(\"transitionstart\",  isOpened ? typeofFunc(onEntering) :typeofFunc(onExiting))   // typeofFunc -> bad naming\r\n        burgerLine.addEventListener(\"transitionend\", isOpened ? typeofFunc(onEntered) : typeofFunc(onExited))\r\n        return ()=>{\r\n            burgerLine.removeEventListener(\"transitionstart\",  isOpened ? typeofFunc(onEntering) :typeofFunc(onExiting))\r\n            burgerLine.removeEventListener(\"transitionend\",isOpened ? typeofFunc(onEntered) : typeofFunc(onExited))\r\n        }\r\n    },[isOpened, onEntered, onEntering, onExiting, onExited])\r\n\r\n    const onMenuItemClickIn = (e) =>{\r\n        onMenuItemClick( e )\r\n        toggle()\r\n    }\r\n   \r\n    const toggle = () => {\r\n        isOpened ? typeofFunc(onExit) : typeofFunc(onEnter)\r\n        setIsOpened((preState)=>{\r\n            return !preState\r\n        })\r\n    }\r\n\r\n    return {\r\n        isOpened,\r\n        containerHeight,\r\n        containerWidth,\r\n        toggle,\r\n        containerRef,\r\n        burgerLineRef,\r\n        menuContainerRef,\r\n        onMenuItemClickIn\r\n    }\r\n}\r\n\r\n","\r\nconst MENU_ANIMATIONS_TYPES = {\r\n    slideLeft:{\r\n        value: 'slideLeft',\r\n        className: 'slideLeft' \r\n    },\r\n    fallDown:{\r\n        value: 'fallDown',\r\n        className: 'fallDown' \r\n    }\r\n}\r\n\r\nexport function getMenuAnimationStyle(animationType){\r\n    return MENU_ANIMATIONS_TYPES[animationType].className\r\n}\r\n\r\nfunction cn(){\r\n    const args = [...arguments];\r\n    const cn = args.reduce((acc,value)=>{\r\n        acc += value ? \" \" + value : \" \"\r\n        return acc\r\n    }, \"\")\r\n    return cn;\r\n}\r\n\r\nexport function applyButtonElementsStyles(buttonWidth , buttonHeight, transitionTime, menuBarTop, buttonBorder){\r\n\r\n    const WITH_BORDER_SIZE_RATIO = 0.8\r\n    const WITH_BORDER_PADDING_RATIO = 0.2\r\n    const NONE_BORDER_SIZE_RATIO = 0.9\r\n    const NONE_BORDER_PADDING_RATIO = 0.1\r\n\r\n    const padding = buttonBorder? (buttonHeight*WITH_BORDER_PADDING_RATIO/2-1) + \"px \" +( buttonWidth*WITH_BORDER_PADDING_RATIO/2-1) + \"px\" : (buttonHeight*NONE_BORDER_PADDING_RATIO/2) + \"px \" +( buttonWidth*NONE_BORDER_PADDING_RATIO/2)+ \"px\"\r\n    const newWidth = buttonBorder ? buttonWidth*WITH_BORDER_SIZE_RATIO : buttonWidth *NONE_BORDER_SIZE_RATIO\r\n    const newHeight = buttonBorder ? buttonHeight*WITH_BORDER_SIZE_RATIO : buttonHeight *NONE_BORDER_SIZE_RATIO\r\n    const border = buttonBorder ? \"solid 1px #ceff7a\" : \" none\"\r\n    const menuContainerTop =Number.isInteger(menuBarTop)  ? menuBarTop : buttonHeight\r\n    const lineHeight =  newWidth / 7 \r\n    const midLineHeight = ( (newHeight / 2) - (lineHeight / 2) ) / Math.sqrt(2) \r\n\r\n\r\n    const inLineStyle = { \r\n        buttonStyle:{ \r\n            width :  newWidth + \"px\",\r\n            height : newHeight + \"px\",\r\n            padding : padding,\r\n            border : border\r\n        },\r\n        topBottLinesStyle: {\r\n            height : newWidth / 7 +\"px\",\r\n            transition: transitionTime + \"s\"\r\n        },\r\n        middleLineStyle: {\r\n            height : newWidth / 7 +\"px\",\r\n            margin : newWidth / 5.83 + \"px 0\",\r\n            transition: transitionTime + \"s\"\r\n        },\r\n        topLineOpenedStyle: {transform: `rotate(-45deg) translate(-${midLineHeight}px, ${midLineHeight}px)`},\r\n        bottomLineOpenedStyle: { transform: `rotate(45deg) translate(-${midLineHeight}px, -${midLineHeight}px)`},\r\n        menuContainerStyle: {top : `${menuContainerTop}px`}\r\n    }\r\n    return inLineStyle;\r\n}\r\n\r\n\r\nexport function calculateButtonDimensions(width, parantWidth, height, parantHeight){\r\n    const HEIGHT_MODIFIER = 1.3\r\n    const WIDTH_MODIFIER = 0.77\r\n    const calculateButtonDimensions = (num, modifier) =>{\r\n        return {\r\n            buttonFinalWidth: num * modifier,\r\n            buttonFinalHeight: num\r\n        }\r\n    }\r\n    if(height !== undefined){\r\n        if(Number.isInteger(height)) return calculateButtonDimensions(height, HEIGHT_MODIFIER)\r\n        if(height === \"auto\")        return calculateButtonDimensions(parantHeight, HEIGHT_MODIFIER)\r\n\r\n    } else if(width !== undefined){\r\n        if(Number.isInteger(width)) return calculateButtonDimensions(width, WIDTH_MODIFIER)\r\n        if( width === \"auto\")       return calculateButtonDimensions(parantWidth , WIDTH_MODIFIER) \r\n    }\r\n    return calculateButtonDimensions(35, HEIGHT_MODIFIER)\r\n}\r\n\r\nexport function finalizeLineSyles(isOpened , topBottLinesStyle, topLineOpenedStyle, bottomLineOpenedStyle){\r\n    return{\r\n        topLineStyle : isOpened ? {...topBottLinesStyle, ...topLineOpenedStyle } : topBottLinesStyle,\r\n        bottomLineStyle : isOpened ? {...topBottLinesStyle, ...bottomLineOpenedStyle } : topBottLinesStyle\r\n    }\r\n}\r\n\r\nexport default cn;\r\n\r\n","import React from 'react';\r\nimport {useBurgerButton} from './hooks'\r\nimport styles from './BurgerMenu.module.css';\r\nimport cn, {applyButtonElementsStyles, finalizeLineSyles, calculateButtonDimensions, getMenuAnimationStyle} from './helpers';\r\n\r\nconst BurgerMenu = ({\r\n    children, \r\n    width,\r\n    height, \r\n    isOpen ,\r\n    transitionDuration = 0.4, \r\n    onEnter, \r\n    onEntering, \r\n    onEntered,\r\n    onExit, \r\n    onExiting, \r\n    onExited,\r\n    onMenuItemClick,\r\n    menuAnimation = \"slideLeft\",  // use from const in helpers\r\n    menuBarTop,\r\n    buttonBorder,\r\n    classes = {}\r\n}) => {\r\n\r\n\r\n    const { isOpened,\r\n            containerHeight,\r\n            containerWidth, \r\n            toggle,\r\n            containerRef, \r\n            burgerLineRef,\r\n            menuContainerRef,\r\n            onMenuItemClickIn } = useBurgerButton(onEntering, onEntered, onEnter, onExit, onExiting, onExited, isOpen , onMenuItemClick)\r\n\r\n    const   {buttonFinalWidth, buttonFinalHeight} = calculateButtonDimensions(width , containerWidth , height, containerHeight);\r\n\r\n    const { buttonStyle, \r\n            topBottLinesStyle, \r\n            middleLineStyle, \r\n            topLineOpenedStyle, \r\n            bottomLineOpenedStyle,  \r\n            menuContainerStyle  } = applyButtonElementsStyles( buttonFinalWidth , buttonFinalHeight , transitionDuration , menuBarTop, buttonBorder)\r\n    \r\n    const   menuAnimationCss = styles[getMenuAnimationStyle(menuAnimation)]\r\n\r\n    const   buttonClassName = isOpened && styles.opened \r\n\r\n    const { topLineStyle, \r\n            bottomLineStyle } = finalizeLineSyles(isOpened ,topBottLinesStyle, topLineOpenedStyle, bottomLineOpenedStyle)\r\n\r\n    return (\r\n        <div className={cn(styles.bm_main_container, buttonClassName, classes.mainContainer)} ref={containerRef}>\r\n            <div className={cn(styles.bm_icon_container, classes.buttonContainer)} onClick={toggle} style={buttonStyle}  >\r\n                <div className={cn(styles.bar1, classes.line)} style={topLineStyle} ref={burgerLineRef}></div>\r\n                <div className={cn(styles.bar2, classes.line)} style={middleLineStyle}></div>\r\n                <div className={cn(styles.bar3, classes.line)} style={bottomLineStyle }></div>\r\n            </div>\r\n            <div className={cn(styles.bm_links_container, menuAnimationCss, classes.menuContainer)} ref={menuContainerRef} style = {menuContainerStyle}>\r\n                <ul className = {cn(classes.menuUl)}>\r\n                    {children.map((child, index) => (\r\n                        <li className = {cn(classes.menuLi)} key={index} onClick={onMenuItemClickIn}> {child} </li>\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n        </div>  \r\n    );\r\n}\r\n  \r\n\r\n  export default BurgerMenu;","import React, {useState} from 'react';\nimport './App.css';\nimport BurgerMenu from './BurgerMenu/BurgerMenu'\n\nfunction App() {\n  const [message, setMessage] = useState(null)\n\n  const callbackFunction = (e) => {\n      setMessage(e.target)\n      console.log(\"Parant GELIK \", e)\n  }\n\n  const myOpeningAllert = () =>{\n    // alert(\"it opening!!!!!\")\n    console.log(\"Click to open!!!!!\")\n  }\n\n  const myClosingAllert = () =>{\n    // alert(\"it close!!!!!\")\n    console.log(\"Click to close!!!!!\")\n  }\n\n  const myStartTtansition = ()=>{\n    console.log(\"entering!!!!!\")\n  }\n\n  const myCloseTtansition = ()=>{\n    console.log(\" Menu has entered!!!!!\")\n  }\n\n  const onExiting = ()=>{\n    console.log(\"start close transition \")\n  }\n\n  const onExited = ()=>{\n    console.log(\"Menu closed \")\n  }\n\n  console.log(message)\n\n  return (\n    <div className=\"App\">\n      <div className=\"App-header\" >\n          <div className=\"menuBar\">\n              \n                <BurgerMenu \n                      // width= {'auto'}\n                      height = {'auto'}\n                      isOpen  = {false}\n                      onEnter={myOpeningAllert} \n                      onEntering={myStartTtansition}\n                      onEntered = {myCloseTtansition}\n\n                      onExit={myClosingAllert} \n                      onExiting = {onExiting}\n                      onExited = {onExited}\n                      onMenuItemClick = {callbackFunction}\n                      buttonBorder = {true}\n                      // transitionDuration=\"0.6\"\n                      menuAnimation = \"fallDown\"\n                      // buttonBorder = \"true\"\n                      // menuBarTop = {125}\n                      classes={{line: \"bgRed\"}} \n                      >\n                    <button dtat-href=\"#hi\" >illustrations</button>\n                    <button data-href=\"#hello\" >about</button>\n                </BurgerMenu>\n\n          </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}